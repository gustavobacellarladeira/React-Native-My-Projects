{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Gustavo Bacellar\\\\Documents\\\\GitHub\\\\React-Native-grupo-delta\\\\app\\\\components\\\\Crud\\\\Crud.js\";\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { launchCamera, launchImageLibrary } from 'react-native-image-picker';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport api from \"../../api/index\";\n\nvar Crud = function Crud() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      endereco = _useState4[0],\n      setEndereco = _useState4[1];\n\n  var pickImage = useCallback(function () {\n    ImagePicker.openPicker({}).then(function (images) {\n      console.log(images);\n    });\n  });\n\n  var submit = function submit() {\n    var data = {\n      name: name,\n      endereco: endereco\n    };\n    console.log(\"Summited\", data);\n    api.post('/', data).then(function (res) {\n      console.log(res);\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"holly moly\"), React.createElement(TextInput, {\n    style: {\n      height: 40,\n      borderColor: 'gray',\n      borderWidth: 1\n    },\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    value: name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      height: 40,\n      borderColor: 'gray',\n      borderWidth: 1\n    },\n    onChangeText: function onChangeText(text) {\n      return setEndereco(text);\n    },\n    value: endereco,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    title: \"Coloque sua imagem\",\n    onPress: pickImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    title: \"Press me\",\n    onPress: function onPress() {\n      return submit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Crud;","map":{"version":3,"sources":["C:/Users/Gustavo Bacellar/Documents/GitHub/React-Native-grupo-delta/app/components/Crud/Crud.js"],"names":["React","useEffect","useState","useCallback","launchCamera","launchImageLibrary","api","Crud","name","setName","endereco","setEndereco","pickImage","ImagePicker","openPicker","then","images","console","log","submit","data","post","res","styles","container","height","borderColor","borderWidth","text","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react'\r\nimport { launchCamera, launchImageLibrary } from 'react-native-image-picker'\r\nimport { StyleSheet, Text, View, TextInput, Button, SafeAreaView, TouchableOpacity } from 'react-native';\r\n\r\n\r\nimport api from '../../api/index'\r\n\r\nconst Crud = () => {\r\n    const [name, setName] = useState('')\r\n    const [endereco, setEndereco] = useState('');\r\n\r\n    const pickImage = useCallback(() => {\r\n        ImagePicker.openPicker({\r\n        }).then(images => {\r\n            console.log(images)\r\n        });\r\n        // api.post('file/upload', data);\r\n    });\r\n\r\n\r\n    // submit \r\n    const submit = () => {\r\n        const data = {\r\n            name: name,\r\n            endereco: endereco\r\n        }\r\n        console.log(\"Summited\", data)\r\n\r\n        api.post('/', data).then(res => {\r\n            console.log(res)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <View style={styles.container}>\r\n                <Text>holly moly</Text>\r\n                <TextInput\r\n                    style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\r\n                    onChangeText={text => setName(text)}\r\n                    value={name}\r\n                />\r\n                <TextInput\r\n                    style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\r\n                    onChangeText={text => setEndereco(text)}\r\n                    value={endereco}\r\n                />\r\n\r\n                <Button title=\"Coloque sua imagem\" onPress={pickImage} />\r\n\r\n                <Button\r\n                    title=\"Press me\"\r\n                    onPress={() => submit()}\r\n                />\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n\r\nexport default Crud\r\n"]},"metadata":{},"sourceType":"module"}