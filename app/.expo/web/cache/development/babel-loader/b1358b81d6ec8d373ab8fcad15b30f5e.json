{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Gustavo Bacellar\\\\Documents\\\\GitHub\\\\React-Native-grupo-delta\\\\app\\\\components\\\\Crud\\\\Crud.js\";\n\nimport React, { useState } from 'react';\nimport * as ImagePicker from \"expo-image-picker\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport api from \"../../api/index\";\n\nvar Crud = function Crud(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      endereco = _useState4[0],\n      setEndereco = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      image = _useState6[0],\n      setImage = _useState6[1];\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n            setSelectedImage = {\n              fileName: result.fileName,\n              fileSize: result.fileSize,\n              type: result.type,\n              uri: result.uri\n            };\n\n            if (!result.cancelled) {\n              setImage(result);\n            }\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  console.log(\"Imagem: \", image);\n\n  var submit = function submit() {\n    var formData = new FormData();\n\n    try {\n      formData.append('name', name);\n      formData.append('endereco', endereco);\n      formData.append('file', image);\n      var data = {\n        name: name,\n        endereco: endereco\n      };\n      api.post('/aluno', formData).then(function (res) {\n        console.log(res);\n        console.log(\"Sucesso!\");\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Cadastrar\"), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Nome\"), React.createElement(TextInput, {\n    style: {\n      height: 40,\n      borderColor: 'gray',\n      borderWidth: 1\n    },\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    value: name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Endere\\xE7o\"), React.createElement(TextInput, {\n    style: {\n      height: 40,\n      borderColor: 'gray',\n      borderWidth: 1,\n      margin: 10\n    },\n    onChangeText: function onChangeText(text) {\n      return setEndereco(text);\n    },\n    value: endereco,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.btnImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    color: \"#333\",\n    title: \"Coloque sua imagem\",\n    onPress: pickImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.btnSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Cadastrar\",\n    onPress: function onPress() {\n      return submit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  })), React.createElement(Button, {\n    title: \"Go back\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  btnImg: {\n    margin: 10\n  },\n  btnSubmit: {\n    margin: 10\n  }\n});\nexport default Crud;","map":{"version":3,"sources":["C:/Users/Gustavo Bacellar/Documents/GitHub/React-Native-grupo-delta/app/components/Crud/Crud.js"],"names":["React","useState","ImagePicker","api","Crud","navigation","name","setName","endereco","setEndereco","image","setImage","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","setSelectedImage","fileName","fileSize","type","uri","cancelled","submit","formData","FormData","append","data","post","then","res","err","styles","container","fontSize","height","borderColor","borderWidth","text","margin","btnImg","btnSubmit","goBack","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport { StyleSheet, Text, View, TextInput, Button, SafeAreaView, TouchableOpacity } from 'react-native';\r\n\r\n\r\nimport api from '../../api/index'\r\n\r\nconst Crud = ({ navigation }) => {\r\n    const [name, setName] = useState('')\r\n    const [endereco, setEndereco] = useState('');\r\n    const [image, setImage] = useState([]);\r\n\r\n\r\n\r\n    const pickImage = async () => {\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n        });\r\n        console.log(result)\r\n        setSelectedImage = {\r\n            fileName: result.fileName,\r\n            fileSize: result.fileSize,\r\n            type: result.type,\r\n            uri: result.uri,\r\n        }\r\n        if (!result.cancelled) {\r\n            setImage(result);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    // submit \r\n    console.log(\"Imagem: \", image)\r\n    const submit = () => {\r\n        let formData = new FormData()\r\n        try {\r\n\r\n            formData.append('name', name)\r\n            formData.append('endereco', endereco)\r\n            formData.append('file', image)\r\n            const data = {\r\n                name: name,\r\n                endereco: endereco,\r\n                // file: image\r\n            }\r\n\r\n\r\n            api.post('/aluno', formData).then(res => {\r\n                console.log(res)\r\n                console.log(\"Sucesso!\")\r\n            })\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <View style={styles.container}>\r\n                <Text style={{ fontSize: 30 }}>Cadastrar</Text>\r\n                <Text>Nome</Text>\r\n\r\n                <TextInput\r\n                    style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\r\n                    onChangeText={text => setName(text)}\r\n                    value={name}\r\n                />\r\n                <Text>Endereço</Text>\r\n                <TextInput\r\n                    style={{ height: 40, borderColor: 'gray', borderWidth: 1, margin: 10 }}\r\n                    onChangeText={text => setEndereco(text)}\r\n                    value={endereco}\r\n                />\r\n\r\n                <View style={styles.btnImg}>\r\n                    <Button\r\n                        color=\"#333\"\r\n                        title=\"Coloque sua imagem\" onPress={pickImage} />\r\n                </View>\r\n                <View style={styles.btnSubmit}>\r\n                    <Button\r\n                        title=\"Cadastrar\"\r\n                        onPress={() => submit()}\r\n                    />\r\n                </View>\r\n                <Button title=\"Go back\" onPress={() => navigation.goBack()} />\r\n            </View>\r\n        </SafeAreaView >\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    btnImg: {\r\n        margin: 10,\r\n    },\r\n    btnSubmit: {\r\n        margin: 10,\r\n    }\r\n});\r\n\r\nexport default Crud\r\n"]},"metadata":{},"sourceType":"module"}