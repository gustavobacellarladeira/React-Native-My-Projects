{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Gustavo Bacellar\\\\Documents\\\\GitHub\\\\React-Native-grupo-delta\\\\app\\\\components\\\\Crud\\\\Crud.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport ImagePicker from 'react-native-image-crop-picker';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar Crud = function Crud() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      endereco = _useState4[0],\n      setEndereco = _useState4[1];\n\n  var pickImage = useCallback(function () {\n    ImagePicker.openPicker({\n      multiple: true,\n      maxFiles: 10\n    }).then(function (images) {\n      var data = new FormData();\n      images.forEach(function (image) {\n        data.append('arquivo', {\n          type: 'image/jpeg',\n          name: image.path,\n          uri: image.path\n        });\n      });\n      api.post('file/upload', data);\n    });\n  });\n\n  var submit = function submit() {\n    var data = {\n      name: name,\n      endereco: endereco\n    };\n    console.log(\"Summited\", data);\n  };\n\n  useEffect(function () {\n    console.log(\"Name: \", name);\n    console.log(\"eNDERECO: \", endereco);\n  }, [name, endereco]);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"holly moly\"), React.createElement(TextInput, {\n    style: {\n      height: 40,\n      borderColor: 'gray',\n      borderWidth: 1\n    },\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    value: name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      height: 40,\n      borderColor: 'gray',\n      borderWidth: 1\n    },\n    onChangeText: function onChangeText(text) {\n      return setEndereco(text);\n    },\n    value: endereco,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Pick an image from camera roll\",\n    onPress: pickImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 31\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: pickImage,\n    style: {\n      padding: normalize(5),\n      left: normalize(155),\n      bottom: normalize(55)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    title: \"Press me\",\n    onPress: function onPress() {\n      return submit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Crud;","map":{"version":3,"sources":["C:/Users/Gustavo Bacellar/Documents/GitHub/React-Native-grupo-delta/app/components/Crud/Crud.js"],"names":["React","useEffect","useState","ImagePicker","Crud","name","setName","endereco","setEndereco","pickImage","useCallback","openPicker","multiple","maxFiles","then","images","data","FormData","forEach","image","append","type","path","uri","api","post","submit","console","log","styles","container","height","borderColor","borderWidth","text","flex","alignItems","justifyContent","width","padding","normalize","left","bottom","StyleSheet","create","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport ImagePicker from 'react-native-image-crop-picker';\r\nimport { StyleSheet, Text, View, TextInput, Button, SafeAreaView, TouchableOpacity } from 'react-native';\r\n\r\n\r\nconst Crud = () => {\r\n    const [name, setName] = useState('')\r\n    const [endereco, setEndereco] = useState('');\r\n\r\n    const pickImage = useCallback(() => {\r\n        ImagePicker.openPicker({\r\n            multiple: true,\r\n            maxFiles: 10,\r\n        }).then(images => {\r\n            const data = new FormData();\r\n            images.forEach(image => {\r\n                data.append('arquivo', {\r\n                    type: 'image/jpeg',\r\n                    name: image.path,\r\n                    uri: image.path,\r\n                });\r\n            });\r\n            api.post('file/upload', data);\r\n        });\r\n    });\r\n\r\n\r\n\r\n    // submit \r\n    const submit = () => {\r\n        const data = {\r\n            name: name,\r\n            endereco: endereco\r\n        }\r\n        console.log(\"Summited\", data)\r\n    }\r\n    // teste de input\r\n    useEffect(() => {\r\n        console.log(\"Name: \", name)\r\n        console.log(\"eNDERECO: \", endereco)\r\n    }, [name, endereco])\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <View style={styles.container}>\r\n                <Text>holly moly</Text>\r\n                <TextInput\r\n                    style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\r\n                    onChangeText={text => setName(text)}\r\n                    value={name}\r\n                />\r\n                <TextInput\r\n                    style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\r\n                    onChangeText={text => setEndereco(text)}\r\n                    value={endereco}\r\n                />\r\n                <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n                    <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\r\n                    {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\r\n                </View>\r\n                <TouchableOpacity\r\n                    onPress={pickImage}\r\n                    style={{\r\n                        padding: normalize(5),\r\n                        left: normalize(155),\r\n                        bottom: normalize(55),\r\n                    }} />\r\n\r\n                <Button\r\n                    title=\"Press me\"\r\n                    onPress={() => submit()}\r\n                />\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n\r\nexport default Crud\r\n"]},"metadata":{},"sourceType":"module"}