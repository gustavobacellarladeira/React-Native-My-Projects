{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Gustavo Bacellar\\\\Documents\\\\GitHub\\\\React-Native-grupo-delta\\\\app\\\\components\\\\Crud\\\\Crud.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport Constants from 'expo-constants';\nimport * as ImagePicker from 'expo-image-picker';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\n\nvar Crud = function Crud() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      endereco = _useState4[0],\n      setEndereco = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      image = _useState6[0],\n      setImage = _useState6[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context2.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var submit = function submit() {\n    var data = {\n      name: name,\n      endereco: endereco\n    };\n    console.log(\"Summited\", data);\n  };\n\n  useEffect(function () {\n    console.log(\"Name: \", name);\n    console.log(\"eNDERECO: \", endereco);\n  }, [name, endereco]);\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"holly moly\"), React.createElement(TextInput, {\n    style: {\n      height: 40,\n      borderColor: 'gray',\n      borderWidth: 1\n    },\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    value: name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      height: 40,\n      borderColor: 'gray',\n      borderWidth: 1\n    },\n    onChangeText: function onChangeText(text) {\n      return setEndereco(text);\n    },\n    value: endereco,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    title: \"Pick an image from camera roll\",\n    onPress: pickImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 31\n    }\n  })), React.createElement(Button, {\n    title: \"Press me\",\n    onPress: function onPress() {\n      return submit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Crud;","map":{"version":3,"sources":["C:/Users/Gustavo Bacellar/Documents/GitHub/React-Native-grupo-delta/app/components/Crud/Crud.js"],"names":["React","useEffect","useState","Constants","ImagePicker","Crud","name","setName","endereco","setEndereco","image","setImage","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uri","submit","data","styles","container","height","borderColor","borderWidth","text","flex","alignItems","justifyContent","width","StyleSheet","create","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Constants from 'expo-constants';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { StyleSheet, Text, View, TextInput, Button, SafeAreaView } from 'react-native';\r\n\r\n\r\nconst Crud = () => {\r\n    const [name, setName] = useState('')\r\n    const [endereco, setEndereco] = useState('');\r\n\r\n\r\n    const [image, setImage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (Platform.OS !== 'web') {\r\n                const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n                if (status !== 'granted') {\r\n                    alert('Sorry, we need camera roll permissions to make this work!');\r\n                }\r\n            }\r\n        })();\r\n    }, []);\r\n\r\n\r\n    const pickImage = async () => {\r\n        let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n        });\r\n\r\n        console.log(result);\r\n\r\n        if (!result.cancelled) {\r\n            setImage(result.uri);\r\n        }\r\n    };\r\n    // submit \r\n    const submit = () => {\r\n        const data = {\r\n            name: name,\r\n            endereco: endereco\r\n        }\r\n        console.log(\"Summited\", data)\r\n    }\r\n    // teste de input\r\n    useEffect(() => {\r\n        console.log(\"Name: \", name)\r\n        console.log(\"eNDERECO: \", endereco)\r\n    }, [name, endereco])\r\n\r\n    return (\r\n        <SafeAreaView style={styles.container}>\r\n            <View style={styles.container}>\r\n                <Text>holly moly</Text>\r\n                <TextInput\r\n                    style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\r\n                    onChangeText={text => setName(text)}\r\n                    value={name}\r\n                />\r\n                <TextInput\r\n                    style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\r\n                    onChangeText={text => setEndereco(text)}\r\n                    value={endereco}\r\n                />\r\n                <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n                    <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\r\n                    {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\r\n                </View>\r\n\r\n\r\n                <Button\r\n                    title=\"Press me\"\r\n                    onPress={() => submit()}\r\n                />\r\n            </View>\r\n        </SafeAreaView>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n});\r\n\r\nexport default Crud\r\n"]},"metadata":{},"sourceType":"module"}